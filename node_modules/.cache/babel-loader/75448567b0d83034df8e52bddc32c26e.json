{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jacobboim/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jacobboim/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jacobboim/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{fetchDailyData}from\"../../api\";import{Line,Bar}from\"react-chartjs-2\";import styles from\"./Chart.module.css\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var lineChart;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);if(dailyData){lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:\"Infected\",borderColor:\"#3333ff\",fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:\"Deaths\",borderColor:\"red\",backgroundColor:\"rgba(255,0,0,0.5)\",fill:true}]}}):null;}var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:[\"Infected\",\"Recovered\",\"Deaths\",\"Active\"],datasets:[{label:\"People\",backgroundColor:[\"rgba(0, 0, 255, 0.5)\",\"rgba(0, 255, 0, 0.5)\",\"rgba(255, 0, 0, 0.5)\",\"rgba(242, 234, 0, 0.5)\"],hoverBackgroundColor:[\"rgba(0, 77, 153)\",\"rgba(30, 102, 49)\",\"rgba(255, 51, 51)\",\"rgba(204, 153, 0)\"],data:[confirmed.value,recovered.value,deaths.value,confirmed.value-(recovered.value+deaths.value)]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["/Users/jacobboim/covid-tracker/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","lineChart","dailyData","setDailyData","fetchAPI","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","hoverBackgroundColor","value","legend","display","title","text","container"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,SAAmC,WAAnCA,SAAmC,CAAxBC,MAAwB,WAAxBA,MAAwB,CAAdC,OAAc,MAAdA,OAAc,CACrE,GAAIC,CAAAA,SAAJ,CADqE,cAEnCZ,QAAQ,CAAC,EAAD,CAF2B,wCAE9Da,SAF8D,eAEnDC,YAFmD,eAGrEb,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,QAAQ,2FAAG,+IACfD,YADe,uBACIZ,CAAAA,cAAc,EADlB,qHAAH,kBAARa,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACT,CALQ,CAKN,EALM,CAAT,CAMA,GAAGF,SAAH,CAAa,CACbD,SAAS,CAAGC,SAAS,CAACG,MAAV,cACV,oBAAC,IAAD,EACE,IAAI,CAAE,CACJC,MAAM,CAAEJ,SAAS,CAACK,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADJ,CAEJC,QAAQ,CAAE,CACR,CACEb,IAAI,CAAEM,SAAS,CAACK,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADR,CAEEa,KAAK,CAAE,UAFT,CAGEC,WAAW,CAAE,SAHf,CAIEC,IAAI,CAAE,IAJR,CADQ,CAOR,CACEhB,IAAI,CAAEM,SAAS,CAACK,GAAV,CAAc,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADR,CAEEW,KAAK,CAAE,QAFT,CAGEC,WAAW,CAAE,KAHf,CAIEE,eAAe,CAAE,mBAJnB,CAKED,IAAI,CAAE,IALR,CAPQ,CAFN,CADR,EADU,CAqBR,IArBJ,CAsBG,CAEH,GAAME,CAAAA,QAAQ,CAAGjB,SAAS,cACxB,oBAAC,GAAD,EACE,IAAI,CAAE,CACJS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CAAoC,QAApC,CADJ,CAEJG,QAAQ,CAAE,CACR,CACEC,KAAK,CAAE,QADT,CAEEG,eAAe,CAAE,CACf,sBADe,CAEf,sBAFe,CAGf,sBAHe,CAIf,wBAJe,CAFnB,CAQEE,oBAAoB,CAAE,CACpB,kBADoB,CAEpB,mBAFoB,CAGpB,mBAHoB,CAIpB,mBAJoB,CARxB,CAcEnB,IAAI,CAAE,CACJC,SAAS,CAACmB,KADN,CAEJlB,SAAS,CAACkB,KAFN,CAGJjB,MAAM,CAACiB,KAHH,CAIJnB,SAAS,CAACmB,KAAV,EAAmBlB,SAAS,CAACkB,KAAV,CAAkBjB,MAAM,CAACiB,KAA5C,CAJI,CAdR,CADQ,CAFN,CADR,CA2BE,OAAO,CAAE,CACPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADD,CAEPC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBpB,OAAtB,CAArB,CAFA,CA3BX,EADwB,CAiCtB,IAjCJ,CAmCA,mBACE,2BAAK,SAAS,CAAEN,MAAM,CAAC2B,SAAvB,EAAmCrB,OAAO,CAAGc,QAAH,CAAcb,SAAxD,CADF,CAGD,CAxED,CA0EA,cAAeN,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  let lineChart;\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, []);\n  if(dailyData){\n  lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n    }\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n              \"rgba(242, 234, 0, 0.5)\",\n            ],\n            hoverBackgroundColor: [\n              \"rgba(0, 77, 153)\",\n              \"rgba(30, 102, 49)\",\n              \"rgba(255, 51, 51)\",\n              \"rgba(204, 153, 0)\",\n            ],\n            data: [\n              confirmed.value,\n              recovered.value,\n              deaths.value,\n              confirmed.value - (recovered.value + deaths.value),\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}